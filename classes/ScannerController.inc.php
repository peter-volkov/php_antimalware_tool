<?php

ob_start();
require_once("FileInfo.inc.php");
require_once("WebServerEnvInfo.inc.php");
require_once("View.inc.php");
require_once("AjaxScanner.inc.php");
require_once("Archiver.inc.php");
require_once("Initializer.inc.php");
require_once("Util.inc.php");
ob_end_clean();


class ScannerController {

	function template_output($path_to_xml) {
		   $util = new Util();
		   $view = new View();
		   $view->setTemplateDirAbsolutePath($util->web_root_dir . "/pat/static/templates/");
		   $view->set("title", "File Scanner");
		   $view->set("path_to_xml", $path_to_xml);
		   $view->display("scanner.tpl");
	}

	function start() { 
        

		$initializer = new Initializer();


		if (!$initializer->isInitialized()) {
		   $initializer->initialize();


		//Common run 
		} else {

			ob_start();

			$initializer = new Initializer();

			// TODO: random name
			$log_filename = 'scan_log.xml';
			$log_filepath = $_SERVER['DOCUMENT_ROOT'] . dirname($_SERVER['PHP_SELF']) . '/' . $log_filename;
			$packed_log_filename = $log_filename . '.zip';


			///////////////////////////////////////////////////////////////////////////////////////////////////////
			if ( !empty($_POST['a']) )
			{	
				$action = $_POST['a'];

				$file_scanner = new AjaxScanner($log_filepath);

				// -------------------------------------- PREPARATION
				if ($action == 'prep') {
					$file_scanner->setUp();
					$file_scanner->performScanning();
				} else 
				// -------------------------------------- SCANNING
					if ($action == 'scan') {
					$file_scanner->performScanning(); 
				} else 
				// -------------------------------------- REPORTING
					if ($action == 'finalize') {
						// create result DOM
						$dom = new DOMDocument('1.0', 'utf-8');

						// create report container
						$website_info_node = $dom->createElement('website_info');
						$dom->appendChild($website_info_node);

						// gather server info and append it to the report
						$ws_env = new WebServerEnvInfo();
						$ws_env_node = $ws_env->getXMLNode();
						$dom->documentElement->appendChild($dom->importNode($ws_env_node, true));

						// retrieve list of files and append it to the report
						$tmp_xml_doc = new DOMDocument();
						$tmp_xml_doc->loadXML('<files>' . $file_scanner->getXMLFilelist() . '</files>');

						$dom->documentElement->appendChild($dom->importNode($tmp_xml_doc->documentElement, true));

						// save report to file
						$archiver = new Archiver($packed_log_filename, 'w');
						$archiver->createFile($log_filename, $dom->saveXML());
						$archiver->close();
						
						// clean up scanner
						$file_scanner->cleanUp();
				}
			} else {
			   // --------------------------------------------- GENERATE INTERFACE
			   ob_end_clean();
			   $this->template_output($packed_log_filename);
			}
		}
	}


}