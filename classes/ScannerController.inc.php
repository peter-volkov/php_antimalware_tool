<?php

ob_start();
require_once("FileInfo.inc.php");
require_once("WebServerEnvInfo.inc.php");
require_once("View.inc.php");
require_once("AjaxScanner.inc.php");
require_once("Archiver.inc.php");
require_once("Initializer.inc.php");
require_once("MalwareDetector.inc.php");
ob_end_clean();


class ScannerController {

	function template_output($path_to_xml, $interval, $malware) {
		   $view = new View();
		   $view->set("title", "File Scanner");
		   $view->set("path_to_xml", $path_to_xml);
           $view->set("interval", $interval);
           $view->set("malware", $malware ? 'checked' : '');
		   $view->display("scanner.tpl");
	}

	function start() { 
        

		$initializer = new Initializer();


		if (!$initializer->isInitialized()) {
		   $initializer->initialize();

		//Common run 
		} else {

			ob_start();

			$initializer = new Initializer();

			// TODO: random name
            global $project_root_dir; 
			$log_filename = 'scan_log.xml';
			$log_filepath = $project_root_dir . '/' . $log_filename;
			$packed_log_filename = $log_filename . '.zip';


			///////////////////////////////////////////////////////////////////////////////////////////////////////
			if ( !empty($_POST['a']) )
			{	
				$action = $_POST['a'];


                $malware = $_POST['m'] == 'on' ? true : false;
                $interval = (int)$_POST['i'];

				$file_scanner = new AjaxScanner($log_filepath);

                $file_scanner->setInterval($interval);
                $file_scanner->setScanForMalware($malware);

				// -------------------------------------- PREPARATION
				if ($action == 'prep') {
                    #-------------------TMP---------------
                    @unlink('/home/www/badcode.tk/web_root/pat/malware_log.tmp.txt');
                    @unlink('/home/www/badcode.tk/web_root/pat/scan_queue.tmp.txt');
                    @unlink('/home/www/badcode.tk/web_root/pat/scan_log.xml.zip');
                    @unlink('/home/www/badcode.tk/web_root/pat/scan_log.xml');
                    #-------------------/TMP---------------
					$file_scanner->setUp();
					echo $file_scanner->performScanning();
				} else 
				// -------------------------------------- SCANNING
					if ($action == 'scan') {
					echo $file_scanner->performScanning(); 
				} else 
					if ($action == 'malware_scan') {
                        $this->detector = new MalwareDetector();
                        $num_files_scanned = $this->detector->malwareScanRound();
                        echo $num_files_scanned;
				} else 

				// -------------------------------------- REPORTING
					if ($action == 'finalize') {
						// create result DOM
						$dom = new DOMDocument('1.0', 'utf-8');

						// create report container
						$website_info_node = $dom->createElement('website_info');
						$dom->appendChild($website_info_node);

						// gather server info and append it to the report
						$ws_env = new WebServerEnvInfo();
						$ws_env_node = $ws_env->getXMLNode();
						$dom->documentElement->appendChild($dom->importNode($ws_env_node, true));

						// retrieve list of files and append it to the report
						$tmp_xml_doc = new DOMDocument();
						$tmp_xml_doc->loadXML('<files>' . $file_scanner->getXMLFilelist() . '</files>');

						$dom->documentElement->appendChild($dom->importNode($tmp_xml_doc->documentElement, true));

						// save report to file
						#$archiver = new Archiver($packed_log_filename, 'w');
                        file_put_contents($log_filename, $dom->saveXML());
						#$archiver->createFile($log_filename, $dom->saveXML());
						#$archiver->close();
						
						// clean up scanner
						$file_scanner->cleanUp();

						echo "FINALIZED";


				}
			} else {
			   // --------------------------------------------- GENERATE INTERFACE
               $file_scanner = new AjaxScanner($log_filepath);
               $this->template_output($packed_log_filename, $file_scanner->getInterval(), $file_scanner->getScanForMalware());
  
			}
		}
	}


}