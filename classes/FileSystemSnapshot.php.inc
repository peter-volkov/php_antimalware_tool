<?

class FileSystemSnapshot
{
    private $files = array();

    public function getFileInfoArray() {
        return $this->files; 
    }

	function getXMLSnapshot($base_dir_name=NULL)
	{	    
        if (!$base_dir_name)
            $base_dir_name = $_SERVER['DOCUMENT_ROOT'] . '/';
       
        $xml_log = new SimpleXMLElement('<website_info/>');
        $xml_log_base = $xml_log->addChild('files');

        $current_directory = end(explode('/', getcwd()));
		$excluded_dirs = array(".", "..", $current_directory);

		if (is_dir($base_dir_name)) 
		{
			if ($base_dir = opendir($base_dir_name)) 
			{
				while (($basedir_element_name = readdir($base_dir)) !== false) 
				{

				    $absolute_path = $base_dir_name . $basedir_element_name;
 
					if (is_file($absolute_path)) 
					{        
                        $fileinfo = new FileInfo($absolute_path);
                        array_push($this->files, $fileinfo);

					} else if (is_dir($absolute_path) && !in_array($basedir_element_name, $excluded_dirs)) {
                        $this->getXMLSnapshot($absolute_path . "/");
					}

				}
				closedir($base_dir);

			} else print " dir opening error";

		} else print " no such dir";

	}

	public function addToXML($xml)
	{   
        $xml_log_fs = $xml->addChild('files');
        foreach($this->files as $fileinfo) {
            $xml_entry = $xml_log_fs->addChild('file');
            $xml_entry->addChild('path', $fileinfo->name);
            $xml_entry->addChild('crc32', $fileinfo->crc32);
            $xml_entry->addChild('md5', $fileinfo->md5);
            $xml_entry->addChild('size', $fileinfo->size);
            $xml_entry->addChild('time_modified', $fileinfo->lastmodified);
        }
        return $xml;
	}
        
}

?>