<?php
///////////////////////////////////////////////////////////////////////////////////////////////////////
// File Scanner 
//
// Greg Zemskov, ai@revisium.com
///////////////////////////////////////////////////////////////////////////////////////////////////////

ob_start();
require_once("classes/FileInfo.inc.php");
require_once("classes/WebServerEnvInfo.inc.php");
require_once("classes/View.inc.php");
require_once("classes/AjaxScanner.inc.php");
require_once("classes/Archiver.inc.php");
require_once("classes/Initializer.inc.php");
ob_end_clean();


function template_output($path_to_xml) {
	   $view = new View("/static/templates/");
	   $view->set("title", "File Scanner");
	   $view->set("path_to_xml", $path_to_xml);
	   $view->display("scanner.tpl");
}

function raw_xml_output($xml) {
	   ob_end_clean();
	   header("Content-type: text/xml");		
	   print $xml;
}

$initializer = new Initializer();

//First run
//Console run check for unittests
if (!$initializer->isInitialized() && php_sapi_name() != "cli") {
    $initializer->initialize();   

//Common run 
} else {

	ob_start();

	$initializer = new Initializer();

	// TODO: random name
	$log_filename = 'scan_log.xml';
	$log_filepath = $_SERVER['DOCUMENT_ROOT'] . dirname($_SERVER['PHP_SELF']) . '/' . $log_filename;
	$packed_log_filename = $log_filename . '.zip';


	///////////////////////////////////////////////////////////////////////////////////////////////////////
	if ( !empty($_POST['a']) )
	{	
		$action = $_POST['a'];

		$file_scanner = new AjaxScanner($log_filepath);

		// -------------------------------------- PREPARATION
		if ($action == 'prep') {
			$file_scanner->setUp();
			$file_scanner->performScanning();
		} else 
		// -------------------------------------- SCANNING
			if ($action == 'scan') {
			$file_scanner->performScanning(); 
		} else 
		// -------------------------------------- REPORTING
			if ($action == 'finalize') {
				// create result DOM
				$dom = new DOMDocument('1.0', 'utf-8');

				// create report container
				$website_info_node = $dom->createElement('website_info');
				$dom->appendChild($website_info_node);

				// gather server info and append it to the report
				$ws_env = new WebServerEnvInfo();
				$ws_env_node = $ws_env->getXMLNode();
				$dom->documentElement->appendChild($dom->importNode($ws_env_node, true));

				// retrieve list of files and append it to the report
				$tmp_xml_doc = new DOMDocument();
				$tmp_xml_doc->loadXML('<files>' . $file_scanner->getXMLFilelist() . '</files>');

				$dom->documentElement->appendChild($dom->importNode($tmp_xml_doc->documentElement, true));

				// save report to file
				$archiver = new Archiver($packed_log_filename, 'w');
				$archiver->createFile($log_filename, $dom->saveXML());
				$archiver->close();
				
				// clean up scanner
				$file_scanner->cleanUp();
		}
	} else {
	   // --------------------------------------------- GENERATE INTERFACE
	   ob_end_clean();
	   template_output($packed_log_filename);
	}
}