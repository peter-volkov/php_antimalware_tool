var totalScanned = 0; // number of totally scanned files
var folderList = new Array(); // temporary folder storage. Folder to scan.
var initialFolder = '.'; // folder to start scanning with

var ajaxHttpRequest;

var processStarted = false;

/**
 * Start and Stop progress spinner
 */
function startProgress(state) {
  var spinnerObj = document.getElementById("spinner");

  if (state) {
    spinnerObj.style.visibility = 'visible';
  } else {
    spinnerObj.style.visibility = 'hidden';
  }

  updateInterface(true);
}

/**
 * Handle ajax response
 */
function handleResponse() {
    // skip REQUEST_SENT
    if (ajaxHttpRequest.readyState == 2)
       return; 

    // skip PARTIAL RESPONSE
    if (ajaxHttpRequest.readyState == 3)
       return; 

    // already stopped
    if (!processStarted) {
       return;
    }

    // process normal page response
    if (ajaxHttpRequest.readyState = 4 && ajaxHttpRequest.status == 200) {
       var ajaxResponse = ajaxHttpRequest.responseText;

       setDebug(ajaxResponse);

       // get respinse as an array
       responseLines = ajaxResponse.split("\n");

       // process new list of folders to scan
       if (responseLines[0] == 'DIRS') { // "DIRS"
          // increase number of scanned files
          totalScanned += Number(responseLines[1]);

          if (responseLines[2] != '') {
             for (var i = 2; i < responseLines.length; i++) {
                 folderList.push(responseLines[i]); 
             }
          }

          if (folderList.length > 0) {
             scanFolders("scan");
          } else {
             // finish! -------------------------------------------------
  	     finishScanning(totalScanned, "DONE!");

  	     // send "finalize" command
  	     // TODO: make special function for command ajax requests
             ajaxHttpRequest.onreadystatechange = null;
             var arguments = "a=finalize&s=";

             ajaxHttpRequest.open("POST", 'scanner.php', true);
             ajaxHttpRequest.setRequestHeader("Content-type","application/x-www-form-urlencoded");
             ajaxHttpRequest.send(arguments);

             // TODO: need to add code...
             updateInterface(false);

          }

          return;
       } // end of "DIRS"

       // process errors
       if (responseLines[0] == '<?php echo AJAX_HEADER_ERROR ?>') { // "ERR"
          // finish!
          finishScanning(totalScanned, "ERROR OCCURED!");

         // TODO: need to add code...
         alert('ERROR');
         
         return;
       } // end of "ERR"


    } else {
       finishScanning(totalScanned, "ERROR OCCURED!");

       // TODO: need to add code...
       alert('AJAX ERROR');
    }

}


function updateInterface(progress_enabled) {
    var result_area = document.getElementById('result_area');
    var progress_area = document.getElementById('progress_area');

    if (progress_enabled) {
       progress_area.style.display = 'block';
       result_area.style.display = 'none';
    } else {
       progress_area.style.display = 'none';
       result_area.style.display = 'block';
    }

}



/**
 * Perform recursively scanning procedure
 */
function scanFolders(action)
{
  if (window.XMLHttpRequest) { // code for IE7+, Firefox, Chrome, Opera, Safari
     ajaxHttpRequest = new XMLHttpRequest();
  } else { // code for IE6, IE5
     ajaxHttpRequest = new ActiveXObject("Microsoft.XMLHTTP");
  }

  // update progress state
  if (folderList.length > 0) {
     updateProgress(totalScanned, folderList[0]);
  }

  /**
   * Ajax processing
   */
  ajaxHttpRequest.onreadystatechange = handleResponse;
  var arguments = "a=" + action + "&s=";

  while (folderList.length > 0) {
     arguments += escape(folderList.shift());

     if (folderList.length > 0) arguments += escape("\n");
  }

  ajaxHttpRequest.open("POST", 'scanner.php', true);
  ajaxHttpRequest.setRequestHeader("Content-type","application/x-www-form-urlencoded");
  ajaxHttpRequest.send(arguments);
}


/**
 * Start or stop scanning
 */
function onStartButtonPressed() {
  var buttonObj = document.getElementById('startButton');

  if (!processStarted) {
     processStarted = true;
     window.scanStartTime = new Date().getTime();
     buttonObj.value = "Cancel Scanning";

     // go!
     folderList.push(initialFolder);
     totalScanned = 0; 
     updateProgress(0, folderList[0]);
     startProgress(true);
     scanFolders("prep");
  } else {
     finishScanning(0, '???');
  }
}

/**
 * Data cleanup
 */
function finishScanning(totalScanned, msg) {
  // TODO: redesign button labels management
  var buttonObj = document.getElementById('startButton');
  buttonObj.value = "Start Scanning";

  processStarted = false;

  clearArray(folderList);
  startProgress(false);

  updateProgress(totalScanned, msg);
  if (msg == "DONE!") {
      scanFinishTime = new Date().getTime();
      scanTime = scanFinishTime - window.scanStartTime;
      console.log("Scan performed in " + scanTime + " seconds");

  }
}

/**
 * Show debug info
 */
function setDebug(str) {
  document.getElementById('debug').innerHTML = str;
}

/**
 * Update progress
 */
function updateProgress(count, currentFolder) {
  document.getElementById('count').innerHTML = count;
  document.getElementById('current_folder').innerHTML = currentFolder;
}


function clearArray(arr) {
   var originalLength = arr.length;
   for (var i = originalLength; i > 0; i--) {
        arr.pop();
   }
}




